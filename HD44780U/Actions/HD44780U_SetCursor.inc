/*
* Данный макрос используется для установки курсора в нужное положение на дисплее
*/
.macro HD44780U_Set_Cursor
	
	push r16						; вталкиваем r16 в STACK
	push r17						; вталкиваем r17 в STACK

	ldi	r17, @0						; записываем @0 в r17
	ldi	r16, @1						; записываем @1 в r16

	_call HD44780U_SetCursor_act	; переходим

	pop r17							; выталкиваем r17 из STACK
	pop r16							; выталкиваем r16 из STACK

.endm
//____________________________________________________________________________________
//____________________________________________________________________________________
HD44780U_SetCursor_act:

	cpi		r17, 1								; сравниваем r17 с 1
	breq	FirstRow							; переходим если равны
												
	cpi		r17, 2								; сравниваем r17 с 2
	breq	SecondRow							; переходим если равны
												
	cpi		r17, 3								; сравниваем r17 с 3
	breq	ThirdRow							; переходим если равны
												
	cpi		r17, 4								; сравниваем r17 с 4
	breq	FourthRow							; переходим если равны

	FirstRow:
		ldi		r17, 128 - 1					; записываем 127 в r17
		add		r16, r17						; суммируем r16 и r17
		rjmp	end								; перепрыгиваем
												
	SecondRow:									
		ldi		r17, 192 - 1					; записываем 191 в r17
		add		r16, r17						; суммируем r16 и r17
		rjmp	end								; перепрыгиваем

	ThirdRow:
		ldi		r17, 128 + $14 - 1				; записываем 147 в r17
		add		r16, r17						; суммируем r16 и r17
		rjmp	end								; перепрыгиваем

	FourthRow:
		ldi		r17, 192 + $14 - 1				; записываем 211 в r17
		add		r16, r17						; суммируем r16 и r17

	end:
		mov r17, r16							; копируем r16 в r17
		subi r17, $80							; вычитаем 128 из r17
		WRITE_REG HD44780U_Address_DDRAM, r17	; записываем адрес курсора в HD44780U_Address_DDRAM
	
	HD44780U_Send_instruction r16				; отсылаем инструкцию

ret
